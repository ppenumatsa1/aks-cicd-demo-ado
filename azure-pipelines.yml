# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service


trigger:
- main
- feature

resources:
- repo: self

variables:

  imageName: 'myapp'  
  containerRegistryDev: 'acrdev686542000'
  containerRegistryStage: 'acrstage686542000'
  containerRegistryProd: 'acrprod686542000'
  dockerfilePath: '**/Dockerfile'
 

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: CI
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build Container Image
      inputs:
        command: build
        repository: $(imageName)
        dockerfile: $(dockerfilePath)
        tags: $(Build.BuildId)

    - task: Docker@2
      displayName: Save Image in CI
      inputs:
        repository: $(imageName)
        command: save
        arguments: '--output $(Pipeline.Workspace)/$(ImageName).image.tar $(ImageName):$(Build.BuildId)'
        addPipelineData: false


    - task: PublishPipelineArtifact@1
      displayName: Publish Pipeline Artifact
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'ContainerImage'
        publishLocation: 'pipeline'
      
    - upload: manifests
      artifact: manifests
    



- stage: CDDEV
  displayName: CD for Dev Env
  dependsOn: CI

  jobs:
  - deployment: Deploy
    displayName: Deploy to Dev Environment
    pool:
      vmImage: $(vmImageName)
    environment: 'myapp-aks-dev.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            displayName: Load Image from CI
            inputs:
              command: load
              arguments: '--input $(Pipeline.Workspace)/ContainerImage/$(imageName).image.tar'
            
          - task: Docker@2
            displayName: ReTag Image with ACR Name - BuildId
            inputs:
              containerRegistry: '$(containerRegistryDev)'
              repository: '$(imageName)'
              command: tag
              arguments: '$(imageName):$(Build.BuildId)  $(containerRegistryDev).azurecr.io/$(imageName):$(Build.BuildId)'


          - task: Docker@2
            displayName: Push Image to Dev ACR
            inputs:
              containerRegistry: '$(containerRegistryDev)'
              repository: '$(imageName)'
              command: push
              tags: $(Build.BuildId)


          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              manifests: |
                '$(Pipeline.Workspace)/manifests/deployment.yml'
                '$(Pipeline.Workspace)/manifests/service.yml'
              containers: '$(containerRegistryDev).azurecr.io/$(imageName):$(Build.BuildId)'
            



- stage: CDStage
  displayName: CD for Prod Env
  

  jobs:
  - deployment: Deploy
    displayName: Deploy to Stage Environment
    pool:
      vmImage: $(vmImageName)
    environment: 'myapp-aks-stage.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            displayName: Load Image from CI
            inputs:
              command: load
              arguments: '--input $(Pipeline.Workspace)/ContainerImage/$(imageName).image.tar'
            
          - task: Docker@2
            displayName: ReTag Image with ACR Name - BuildId
            inputs:
              containerRegistry: '$(containerRegistryStage)'
              repository: '$(imageName)'
              command: tag
              arguments: '$(imageName):$(Build.BuildId)  $(containerRegistryStage).azurecr.io/$(imageName):$(Build.BuildId)'


          - task: Docker@2
            displayName: Push Image to Stage ACR
            inputs:
              containerRegistry: '$(containerRegistryStage)'
              repository: '$(imageName)'
              command: push
              tags: $(Build.BuildId)


          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              manifests: |
                '$(Pipeline.Workspace)/manifests/deployment.yml'
                '$(Pipeline.Workspace)/manifests/service.yml'
              containers: '$(containerRegistryStage).azurecr.io/$(imageName):$(Build.BuildId)'
              

- stage: CDProd
  displayName: CD for Prod Env
  

  jobs:
  - deployment: Deploy
    displayName: Deploy to Stage Environment
    pool:
      vmImage: $(vmImageName)
    environment: 'myapp-aks-prod.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            displayName: Load Image from CI
            inputs:
              command: load
              arguments: '--input $(Pipeline.Workspace)/ContainerImage/$(imageName).image.tar'
            
          - task: Docker@2
            displayName: ReTag Image with ACR Name - BuildId
            inputs:
              containerRegistry: '$(containerRegistryProd)'
              repository: '$(imageName)'
              command: tag
              arguments: '$(imageName):$(Build.BuildId)  $(containerRegistryProd).azurecr.io/$(imageName):$(Build.BuildId)'


          - task: Docker@2
            displayName: Push Image to Stage ACR
            inputs:
              containerRegistry: '$(containerRegistryProd)'
              repository: '$(imageName)'
              command: push
              tags: $(Build.BuildId)


          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              manifests: |
                '$(Pipeline.Workspace)/manifests/deployment.yml'
                '$(Pipeline.Workspace)/manifests/service.yml'
              containers: '$(containerRegistryProd).azurecr.io/$(imageName):$(Build.BuildId)'
